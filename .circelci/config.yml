# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#


version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            echo "-----start test:"
            python simple_test.py
            echo "-----end test:"
            
  deploy-job:
    machine:
      environment:
        PROJECT_NAME: test-ci-198806
        CLUSTER_NAME: nginx-1-cluster
        CLOUDSDK_COMPUTE_ZONE: us-central1-a	
        DEBIAN_FRONTEND: noninteractive
      services:
        - docker

    dependencies:
      pre:
        - sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update
        - sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update kubectl
        - echo $ACCT_AUTH | base64 --decode -i > ${HOME}/account-auth.json
        - sudo /opt/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/account-auth.json
        - sudo /opt/google-cloud-sdk/bin/gcloud config set project $PROJECT_NAME
        - sudo /opt/google-cloud-sdk/bin/gcloud --quiet config set container/cluster $CLUSTER_NAME
        # Reading the zone from the env var is not working so we set it here
        - sudo /opt/google-cloud-sdk/bin/gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
        - sudo /opt/google-cloud-sdk/bin/gcloud --quiet container clusters get-credentials $CLUSTER_NAME
        - docker build -t us.gcr.io/${PROJECT_NAME}/hello:$CIRCLE_SHA1 .
        # Using a separate tag command until Docker 1.10 is available on CircleCI, then we can use two tags in the build command above
        - docker tag us.gcr.io/${PROJECT_NAME}/hello:$CIRCLE_SHA1 us.gcr.io/${PROJECT_NAME}/hello:latest

    test:
      post:
        - docker run -d -p 3000:3000 -e "SECRET_KEY_BASE=abcd1234" us.gcr.io/${PROJECT_NAME}/hello:$CIRCLE_SHA1; sleep 10
        - curl --retry 10 --retry-delay 5 -v http://localhost:3000

    deployment:
      prod:
        branch: master
        commands:
          - ./deploy.sh
               
workflows:
  version: 2
  build-deploy:
    jobs:
      - build-job
      - deploy-job:
          requires:
            - build-job
          filters:
            branches:
              only: master




# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#

version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image:  google/cloud-sdk
    steps:
      - checkout
      - run:
          name: run tests
          command: |
            echo "-----start test:"
            python simple_test.py
            echo "-----end test"
      - run:
          name: run env config
          command: |
            echo "-----start env:"
            echo $GCLOUD_SERVICE_KEY
            echo $GOOGLE_PROJECT_ID
            echo ${GOOGLE_PROJECT_ID}
            echo "-----end env"
      - run: echo "----run gcp config"
      - run: echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ./gcloud-service-key.json
      - run:      gcloud auth activate-service-account --key-file=./gcloud-service-key.json
      - run:      gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:      gcloud --quiet config set compute/zone asia-east1-b
      #- run:      gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - run:      echo "-----end config"echo
            
      

            
  deploy:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run: echo "----run config"
      - run: echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ./gcloud-service-key.json
      - run: gcloud auth activate-service-account --key-file=./gcloud-service-key.json
      - run: gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run: gcloud --quiet config set compute/zone asia-east1-b
      - run: gcloud container images list --repository=gcr.io/${GOOGLE_PROJECT_ID}
      #- run: gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}

      - run: echo "----run CD"
      - run: gcloud container builds submit --tag gcr.io/${GOOGLE_PROJECT_ID}/hello-circleci-app:v2 .
      #- run: docker run --rm -p 8080:8080 gcr.io/${PROJECT_ID}/hello-app:v4
      - run: gcloud container clusters create hello-circleci-cluster --num-nodes=2
      - run: kubectl run hello-circleci-web2 --image=gcr.io/${GOOGLE_PROJECT_ID}/hello-circleci-app:v2 --port 8080
      - run: kubectl expose deployment hello-circleci-web2 --type=LoadBalancer --port 80 --target-port 8080
      #- run: kubectl scale deployment hello-circleci-web --replicas=2
      #- run: kubectl set image deployment/hello-web hello-web=gcr.io/${PROJECT_ID}/hello-circleci-app:v3

        
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
